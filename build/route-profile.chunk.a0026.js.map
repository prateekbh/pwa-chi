{"version":3,"sources":["webpack:///./routes/profile/index.js","webpack:///./routes/profile/style.css"],"names":["Profile","time","Date","now","count","_this","setState","state","componentDidMount","componentWillUnmount","clearInterval","this","timer","render","user","_ref","_ref2","Object","preact__WEBPACK_IMPORTED_MODULE_0__","class","_style__WEBPACK_IMPORTED_MODULE_4___default","a","profile","toLocaleString","preact_material_components_Button__WEBPACK_IMPORTED_MODULE_2___default","raised","ripple","onClick","increment","props","reducer","__webpack_exports__","preact_redux__WEBPACK_IMPORTED_MODULE_1__","module","exports"],"mappings":"ybAMMA,sKAEJC,KAAMC,KAAKC,MACXC,MAAO,4BAcK,WACZC,EAAKC,UAAWL,KAAMC,KAAKC,gCAGhB,WACXE,EAAKC,UAAWF,MAAOC,EAAKE,MAAMH,MAAM,kIAfzCI,iCAKAC,gCACCC,cAAcC,KAAKC,UAapBC,qBAA2B,IAAlBC,EAAkBC,EAAlBD,KAAUb,EAAQe,EAARf,KAClB,OACCgB,OAAAC,EAAA,EAAAD,CAAA,OAAKE,MAAOC,EAAAC,EAAMC,SACjBL,OAAAC,EAAA,EAAAD,CAAA,sBAAcH,GACdG,OAAAC,EAAA,EAAAD,CAAA,sDAA+CH,EAA/C,KAEAG,OAAAC,EAAA,EAAAD,CAAA,4BAAoB,IAAIf,KAAKD,GAAMsB,kBAEnCN,OAAAC,EAAA,EAAAD,CAAA,SACCA,OAAAC,EAAA,EAAAD,CAACO,EAAAH,GAAOI,QAAA,EAAOC,QAAA,EAAOC,QAAShB,KAAKiB,WAApC,YACC,IAFF,WAGUjB,KAAKkB,MAAMC,QAAQ1B,MAH7B,gBAlCkBc,EAAA,WA8CtBa,EAAA,QAAed,OAAAe,EAAA,EAAAf,CAAQ,SAACV,GAAD,OAEnBuB,QAASvB,EAAMuB,UAFnB,CAIE9B,qBCvDFiC,EAAAC,SAAkBZ,QAAA","file":"route-profile.chunk.a0026.js","sourcesContent":["import { h, Component } from 'preact';\nimport { connect } from 'preact-redux';\nimport Button from 'preact-material-components/Button';\nimport 'preact-material-components/Button/style.css';\nimport style from './style';\n\nclass Profile extends Component {\n\tstate = {\n\t\ttime: Date.now(),\n\t\tcount: 10\n\t};\n\n\t// gets called when this route is navigated to\n\tcomponentDidMount() {\n\t\t// start a timer for the clock:\n\t}\n\n\t// gets called just before navigating away from the route\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timer);\n\t}\n\n\t// update the current time\n\tupdateTime = () => {\n\t\tthis.setState({ time: Date.now() });\n\t};\n\n\tincrement = () => {\n\t\tthis.setState({ count: this.state.count+1 });\n\t};\n\n\t// Note: `user` comes from the URL, courtesy of our router\n\trender({ user }, { time }) {\n\t\treturn (\n\t\t\t<div class={style.profile}>\n\t\t\t\t<h1>Profile: {user}</h1>\n\t\t\t\t<p>This is the user profile for a user named { user }.</p>\n\n\t\t\t\t<div>Current time: {new Date(time).toLocaleString()}</div>\n\n\t\t\t\t<p>\n\t\t\t\t\t<Button raised ripple onClick={this.increment}>Click Me</Button>\n\t\t\t\t\t{' '}\n\t\t\t\t\tClicked {this.props.reducer.count} times.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\nexport default connect((state) =>\n  ({\n    reducer: state.reducer\n  })\n)(Profile);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile__t2Dqz\"};"],"sourceRoot":""}